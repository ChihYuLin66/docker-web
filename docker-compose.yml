version: '3'

networks:
    frontend:
      driver: ${NETWORKS_DRIVER}
services:

### PHP8.2 #########################################
  php82:
    container_name: my-php82
    build: 
      context: ./php82
      args: 
        - PHP_NORMAL_USER=${NORMAL_USER}
        - PHP_NORMAL_GROUP=${NORMAL_GROUP}
        - PHP82_NODE_VERSION=${PHP82_NODE_VERSION}
    expose:
      - "9000"
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${PHP82_LOG_PATH}:/var/log/php82
    ports: 
      - "${VITE_PORT}:5173"
      - "${NUXT_PRORT}:3000"
    networks:
      - frontend
    # restart: always
    environment:
      - DEBUG=1
      
### PHP7.3 #########################################
  php73:
    container_name: my-php73
    build: 
      context: ./php73
      args: 
        - PHP_NORMAL_USER=${NORMAL_USER}
        - PHP_NORMAL_GROUP=${NORMAL_GROUP}
    expose:
      - "9000"
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${PHP73_LOG_PATH}:/var/log/php73
    networks:
      - frontend
    # restart: always
    environment:
      - DEBUG=1

### PHP5.6 #########################################
  php56:
    container_name: my-php56
    build: 
      context: ./php56
      args: 
        - PHP_NORMAL_USER=${NORMAL_USER}
        - PHP_NORMAL_GROUP=${NORMAL_GROUP}
    expose:
      - "9000"
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${PHP56_LOG_PATH}:/var/log/php56
      - ./php56/config:/usr/local/etc/php/conf.d
    networks:
      - frontend
    # restart: always
    environment:
      - DEBUG=1


### NGINX Server #########################################
  nginx:
    container_name: my-nginx
    build: 
      context: ./nginx
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/conf.d
    ports: 
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    external_links:
      - "php82:php82"
      - "php73:php73"
      - "php56:php56"
    depends_on:
      - php82
      - php73
      - php56
    networks:
      - frontend
      # - backend
    # restart: always

### MariaDB ##############################################
  mariadb:
    container_name: my-mariadb
    build:
      context: ./mariadb
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MARIADB_PORT}:3306"
    environment:
      - TZ=Asia/Taipei
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD=${MARIADB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    networks:
      - frontend


### Python

  selenium:
    image: selenium/standalone-chrome-debug:latest  # 使用帶有 VNC 支持的 Chrome Debug 映像
    container_name: selenium
    ports:
      - "4444:4444"  # WebDriver 端口，用於 Python 與 Selenium 服務的連接
      - "5900:5900"  # VNC 端口，用於觀察瀏覽器 GUI
    environment:
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1080
      - SCREEN_DEPTH=24
      - TZ=Asia/Taipei  # 時區
    shm_size: 2gb  # 增加共享內存，以防止 Chrome 在 Docker 中崩潰
                    
  python-app:
    image: python:3.9
    container_name: python-app
    volumes:
      - /home/user/SideProjects:/usr/src/app  # 主機目錄掛載到容器
    working_dir: /usr/src/app/
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - selenium
    tty: true  # 保持容器終端開啟